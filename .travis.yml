language: python # (Ansible)

sudo: required

services:
  - docker

branches:
  except:
    - /^experimental\/.*$/
    - /^exp\/.*$/
    - /^dev\/.*$/
    - /^testing\/.*$/
    - /^test\/.*$/
    - /^doc\/.*$/
    - /^docs\/.*$/
    - /^documentation\/.*$/

env:
  matrix:
    #- HOST_CLOUD=ostack
    #- HOST_CLOUD=gcp
    - HOST_CLOUD=aws

before_install:

# Build Docker image
# install: docker build -t andersla/provisioners:latest .

before_script:

  # Init test deployment
#  - bin/kn init test-deployment
#  - cd test-deployment
  - cp config.${HOST_CLOUD}.sh-template config.${HOST_CLOUD}.sh

  # RENDER CONFIGURATION
  # Create terraform.tfvars
#  - >
#      if [ "$HOST_CLOUD" = 'openstack' ]; then
#        cp terraform.tfvars.os-template terraform.tfvars
#      else
#        cp "terraform.tfvars.${HOST_CLOUD}-template" terraform.tfvars
#      fi
  # Common
  - sed -i -e "s/your-cluster-prefix/cloud-deploy-kubenow-ci-${TRAVIS_BUILD_NUMBER}-${HOST_CLOUD}/g" config.${HOST_CLOUD}.sh
  # AWS
  - sed -i -e "s/your-acces-key-id/${AWS_ACCESS_KEY_ID}/g" config.${HOST_CLOUD}.sh
  - sed -i -e "s#your-secret-access-key#${AWS_SECRET_ACCESS_KEY}#g" config.${HOST_CLOUD}.sh
  # GCE
#  - printf '%s\n' "$GCE_CREDENTIALS" > "./service-account.json"
#  - sed -i -e "s/your_project_id/${GCE_PROJECT_ID}/g" terraform.tfvars
  # OS
#  - sed -i -e "s/your-pool-name/${OS_POOL_NAME}/g" terraform.tfvars
#  - sed -i -e "s/external-net-uuid/${OS_EXTERNAL_NET_UUUID}/g" terraform.tfvars
#  - sed -i -e "s/your-master-flavor/${OS_MASTER_FLAVOR}/g" terraform.tfvars
#  - sed -i -e "s/your-node-flavor/${OS_NODE_FLAVOR}/g" terraform.tfvars
#  - sed -i -e "s/your-edge-flavor/${OS_EDGE_FLAVOR}/g" terraform.tfvars

  # Cloudflare
#  - sed -i -e "s/# use_cloudflare/use_cloudflare/g" terraform.tfvars
#  - sed -i -e "s/# cloudflare_email = \"your-cloudflare-email\"/cloudflare_email = \"${CI_CLOUDFLARE_EMAIL}\"/g" terraform.tfvars
#  - sed -i -e "s/# cloudflare_token = \"your-cloudflare-token\"/cloudflare_token = \"${CI_CLOUDFLARE_TOKEN}\"/g" terraform.tfvars
#  - sed -i -e "s/# cloudflare_domain = \"your-domain-name\"/cloudflare_domain = \"${CI_CLOUDFLARE_DOMAIN}\"/g" terraform.tfvars

script:
  # Deploy
  - travis_retry ./phenomenal.sh deploy "$HOST_CLOUD"
  # Test
 # - ../bin/kn ansible-playbook playbooks/infra-test.yml
 # - ../bin/kn kubectl get nodes # try to list nodes
 # - ../bin/kn helm list # try to helm list
 # - ../bin/kn openstack --version # try to run an openstack command

after_script:
  - travis_retry ./phenomenal.sh destroy "$HOST_CLOUD"
